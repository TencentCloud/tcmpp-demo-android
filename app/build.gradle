import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id "org.jetbrains.kotlin.android" version "1.8.0"
    id "org.jetbrains.kotlin.kapt" version "1.8.0"
}

apply from: '../deps.gradle'

if (rootProject.ext.useOfflineSdks){
    apply from: '../offline_sdks/downloadDeps.gradle'
}

android {
    namespace 'com.tencent.tcmpp.demo'
    compileSdk 33

    defaultConfig {
        applicationId "com.tencent.tcmpp.demo"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        packagingOptions {
            pickFirst 'lib/arm64-v8a/libc++_shared.so'
            pickFirst 'lib/armeabi/libc++_shared.so'
            pickFirst 'lib/armeabi-v7a/libc++_shared.so'
            pickFirst 'lib/arm64-v8a/libmarsxlog.so'
            pickFirst 'lib/armeabi/libmarsxlog.so'
            pickFirst 'lib/armeabi-v7a/libmarsxlog.so'
            pickFirst 'lib/arm64-v8a/libv8jni.so'
        }

        ndk { abiFilters "arm64-v8a" }
    }

    signingConfigs {
        config {
            keyAlias 'jason'
            keyPassword '1234abcd'
            storeFile file('tcmpp.jks')
            storePassword '1234abcd'
        }
    }

    buildTypes {

        debug {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.config
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.assemble.doLast {
            StringBuilder builder = new StringBuilder()
            builder.append("${project.rootProject.projectDir}")
                    .append(File.separator)
                    .append("build-app-output")
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                println "outputFile=${outputFile.name}"
                if (outputFile?.name?.endsWith('.apk')) {
                    File file = new File(builder.toString())
                    if (!file.exists()) {
                        file.mkdirs()
                    }
                    copy {
                        from outputFile
                        into builder.toString()
                        rename {
                            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                            "tcmpp-android-demo-${df.format(new Date())}.apk".toString()
                        }
                    }
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation('com.github.niorgai:StatusBarCompat:2.3.3', {
        exclude group: 'androidx.appcompat:appcompat'
        exclude group: 'com.google.android.material:material'
    })

    implementation 'androidx.core:core-ktx:1.10.0'

    implementation("com.github.bumptech.glide:glide:4.15.1") {
        exclude group: "com.android.support"
    }

    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    //gosn
    implementation 'com.google.code.gson:gson:2.9.1'
    // ok-http
    implementation "com.squareup.okhttp3:okhttp:4.12.0"

    kapt project.ext.TCMPPDeps['mini_annotation_processor']

    if (rootProject.ext.useOfflineSdks) {
        implementation fileTree(include: ['*.jar', '*.aar'], dir: "${project.rootDir}/offline_sdks/tcmpp-mini-core")
        implementation fileTree(include: ['*.jar', '*.aar'], dir: "${project.rootDir}/offline_sdks/tcmpp-tencent-map")
    } else {

        // X5 SDK 可以开发者根据工程实际情况，引入X5不同版本类型，具体请参考接入文档说明
        // x5动态内核引入示例
//        implementation project.ext.TCMPPDeps['mini_extra_dynamic_x5']
//        implementation project.ext.TCMPPDeps['dynamicx5']

        // mini app start
        implementation project.ext.TCMPPDeps['mini_core']

        // qrcode support
        implementation project.ext.TCMPPDeps['mini_extra_qrcode']

        //tencent map  support
        implementation project.ext.TCMPPDeps['mini_extra_map']
        // map sdk
        // 应对隐私问题
        // 地图库
        implementation project.ext.TencentMapDeps['tencent-map-vector-sdk']
        // 地图组件库，包括小车平移、点聚合等组件功能，详见开发指南。
        implementation project.ext.TencentMapDeps['sdk-utilities']
        // 定位组件
        implementation project.ext.TencentMapDeps['TencentLocationSdk-openplatform']

        //google map  support
        implementation project.ext.TCMPPDeps['mini_extra_google_map']

        //huawei map support
        implementation project.ext.TCMPPDeps['mini_extra_huawei_map']

        //live support
        implementation project.ext.TCMPPDeps['mini_extra_trtc_live']
        //nfc support
        implementation project.ext.TCMPPDeps['mini_extra_nfc']
        //lbs support
        implementation project.ext.TCMPPDeps['mini_extra_lbs']
        //bluetooth support
        implementation project.ext.TCMPPDeps['mini_extra_bluetooth']
        //contact support
        implementation project.ext.TCMPPDeps['mini_extra_contact']
        //Biometric support
        implementation project.ext.TCMPPDeps['mini_extra_soter']
        //clipboard support
        implementation project.ext.TCMPPDeps['mini_extra_clipboard']
        //calendar support
        implementation project.ext.TCMPPDeps['mini_extra_calendar']
        //network support (tcp/udp/mdns)
        implementation project.ext.TCMPPDeps['mini_extra_network']
        //wifi support
        implementation project.ext.TCMPPDeps['mini_extra_wifi']
        //media support
        implementation project.ext.TCMPPDeps['mini_extra_media_support']

        //v8 engine
//        implementation project.ext.TCMPPDeps['mini_extra_v8']
    }

    //huawei map support
    implementation 'com.huawei.hms:maps:6.9.0.300'
    implementation 'com.huawei.hms:maps-basic:6.9.0.300'
    implementation 'com.huawei.hms:site:6.5.1.300'
}